1) Пол персоны в онбординге.

Пол представлен как nullable enum. Чтобы не добавлять отдельное поле для указания причины отсутствия пола, можно реализовать enum следующим образом:
- Первые 10–20 значений — причины отсутствия пола;
- Последующие значения — конкретные «типы полов».
Таким образом, поле будет одно, позволит указать пол и обозначить причину его отсутствия.

2) Электронный ПТС.

Поле электронного ПТС сейчас реализовано как nullable string в основной сущности ПТС. 
Также как nullable представлены поля серии и номера для бумажного ПТС.
База данных - mongodb.
Правильнее было бы разделить две независимые подсущности с разными наборами полей (с дублированием полей и без наследования).
В сущность ПТС лучше добавить поле type (enum: Old, Electronic).
В зависимости от значения type хранить данные в соответствующих структурах:
- OldPts — поля для старого типа стс;
- ElectronicPts — поля для электронного типа птс;

3) пропуска.

Дата подачи заявки на пропуск — nullable-поле.
Появляется, когда статус пропуска меняется на Served.

Здесь можно было бы создать отдельный JSONB-объект на уровне PostgreSQL (served_pass_data) и складывать туда информацию по поданному пропуску.
Или сделать отдельную таблицу.
Но тогда на уровне кода всё равно было бы nullable-поле в классе (навигационное свойство).

Или сделать отдельную модель для поданного пропуска.

4) представители бизнеса.

Хранятся в таблице персон онбординга и имеют ряд nullable-полей, например, поле typeOfRepresentation, которое заполняется, если поле isLegalRep = true.

В этом случае самым оптимальным вариантом является создание отдельной таблицы — legal_representatives,
где typeOfRepresentation всегда обязательно к заполнению, а в коде поле станет не nullable и выделится в отдельную сущность.

5) Адрес бизнеса.

Компании хранятся в таблице companies и имеют nullable-поле registeredaddress.
Здесь можно сделать это поле типом json по умолчанию — с полем кода страны, взятым из поля countrycode этой же таблицы. 
Все остальные поля, такие как улица и дом, могут быть просто пустыми.


Итого — можно сделать вывод, что nullable-поля — это следствие слабой системы типов и ленивого проектирования.
Но, конечно, иногда проще просто добавить nullable-поле, особенно в CRUD-логике.