1) Валидация ошибок на шаге онбординга через прокидывание ContractValidationException

После - переделываем на типизированный контракт, снижаем кол-во аллокаций делегатов - за счет хранения самого объекта в ValidationScope.
далее делегаты кэшируется в генерируемом классе в статических полях.

2) Валидация ошибок мобильного телефона

После - переделываем на простой типизированный контракт.

3) Валидация регистрационного номера кидает CustomWebException (ошибки привязанные к Http кодам...)

После - переделываем на обертку группы валидационных ошибок с возможностью обработки по типу.
Дополнительно - логичнее было бы не хранить на бэкэнде переводы, а просто отдавать типизированную ошибку на обработку фронту/мобилкам.

4) Получение id верифицированной персоны

После - переносим в сервис и создаем типизированный контракт.

5) Получение компании по id

После - переделываем на типизированный контракт.

Итого - благодаря этой практике
- упрощаем поддержку текущей кодовой базы, все ошибки явно типизированы, не нужно искать и отлавливать exception-ы внутри конкретных реализаций;
- производительность явно выше.
В целом - неявно стараюсь этой практики придерживаться.